name: Deploy to Sakura Server via SSH

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}          # 例: www2225.sakura.ne.jp
      SSH_PORT: ${{ secrets.SSH_PORT }}          # 例: 22（省略可）
      SSH_USER: ${{ secrets.SSH_USER }}          # 例: wellnoa
      REMOTE_PATH: ${{ secrets.REMOTE_PATH }}    # 例: /home/wellnoa/www

      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}

      OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
      ADMIN_USER: ${{ secrets.ADMIN_USER }}
      ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

      APP_ENV:  ${{ secrets.APP_ENV }}           # 例: production or local
      BASE_URL: ${{ secrets.BASE_URL }}          # 例: https://wellnoa.sakura.ne.jp

    steps:
      - name: 🧾 Checkout
        uses: actions/checkout@v4

      - name: 🔐 Setup SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: 🧩 Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${SSH_PORT:-22}" "${SSH_HOST}" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: 🛡️ Sanity check target path
        run: |
          set -euo pipefail
          if [ -z "${REMOTE_PATH:-}" ]; then
            echo "ERROR: REMOTE_PATH is empty. Set it in GitHub Secrets."; exit 1
          fi
          case "${REMOTE_PATH}" in
            "/"|"/root"|"/home"|"/home/${SSH_USER}"|"/var"|"/usr"|"/etc")
              echo "ERROR: REMOTE_PATH is dangerous: ${REMOTE_PATH}"; exit 1;;
          esac
          echo "REMOTE_PATH looks ok: ${REMOTE_PATH}"

      - name: 📂 Ensure target dir exists
        run: |
          ssh -p "${SSH_PORT:-22}" "${SSH_USER}@${SSH_HOST}" "mkdir -p '${REMOTE_PATH}'"

      - name: 🧹 Prepare rsync ignore rules
        run: |
          cat > .rsync-filter <<'EOF'
          - .git/
          - .github/
          - node_modules/
          - vendor/
          - env.php               # リモートで生成するため除外
          - **/.DS_Store
          - **/Thumbs.db
          EOF

      - name: Rsync to remote (safe: no --delete)
        run: |
          set -euo pipefail
          CLEAN_REMOTE_PATH="$(echo "${REMOTE_PATH}" | sed 's:/*$::')"
          DEST="${SSH_USER}@${SSH_HOST}:${CLEAN_REMOTE_PATH}/"
          echo "Sync to ${DEST}"
          rsync -az \
            --filter='merge .rsync-filter' \
            -e "ssh -p ${SSH_PORT:-22}" \
            ./ "${DEST}"

      - name: ✍️ Generate env.php on remote (with sakura_db_info function)
        run: |
          ssh -p "${SSH_PORT:-22}" "${SSH_USER}@${SSH_HOST}" "cat > '${REMOTE_PATH%/}/env.php' <<'PHP'
          <?php
          /**
           * Auto-generated by GitHub Actions. Do not commit this file.
           */

          // ====== アプリ用定数 ======
          if (!defined('APP_ENV'))  define('APP_ENV',  getenv('APP_ENV') ?: 'production');
          if (!defined('BASE_URL')) define('BASE_URL', getenv('BASE_URL') ?: '');

          // ====== DB定数 ======
          if (!defined('DB_HOST')) define('DB_HOST', getenv('DB_HOST') ?: '');
          if (!defined('DB_NAME')) define('DB_NAME', getenv('DB_NAME') ?: '');
          if (!defined('DB_USER')) define('DB_USER', getenv('DB_USER') ?: '');
          if (!defined('DB_PASS')) define('DB_PASS', getenv('DB_PASS') ?: '');

          // ====== その他定数 ======
          if (!defined('OPENWEATHER_API_KEY')) define('OPENWEATHER_API_KEY', getenv('OPENWEATHER_API_KEY') ?: '');
          if (!defined('ADMIN_USER'))          define('ADMIN_USER', getenv('ADMIN_USER') ?: 'admin');
          if (!defined('ADMIN_PASSWORD'))      define('ADMIN_PASSWORD', getenv('ADMIN_PASSWORD') ?: '');

          // ====== 互換用：sakura_db_info() ======
          if (!function_exists('sakura_db_info')) {
            function sakura_db_info() {
              return [
                'db_name' => defined('DB_NAME') ? DB_NAME : '',
                'db_host' => defined('DB_HOST') ? DB_HOST : '',
                'db_id'   => defined('DB_USER') ? DB_USER : '',
                'db_pw'   => defined('DB_PASS') ? DB_PASS : '',
              ];
            }
          }
          PHP"

      - name: 🔧 Post-deploy fixes
        run: |
          ssh -p "${SSH_PORT:-22}" "${SSH_USER}@${SSH_HOST}" "chmod 640 '${REMOTE_PATH%/}/env.php' || true"
          ssh -p "${SSH_PORT:-22}" "${SSH_USER}@${SSH_HOST}" "touch '${REMOTE_PATH%/}/index.php' || true"

      - name: ✅ Health check
        run: |
          echo "Deployed to ${BASE_URL:-<set BASE_URL secret>}"